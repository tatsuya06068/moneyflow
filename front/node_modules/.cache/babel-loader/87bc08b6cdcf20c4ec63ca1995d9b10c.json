{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport useGetToken from '../../common/useGetToken';\nconst initialState = {\n  BoPItems: []\n}; // const {user} = useAuth0();\n\nfunction getToken() {\n  _s();\n\n  const token = useGetToken();\n\n  const getBoPList = async () => {\n    console.log(token);\n    return axios.get(\"http://localhost:3000/api/private\", {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n  };\n}\n\n_s(getToken, \"0KGDPBO9rbao/DTawfazkxzTAc4=\", false, function () {\n  return [useGetToken];\n});\n\nexport const responsBoP = createAsyncThunk('balanceOfPayment/boPList', async () => {\n  return getTo().then(res => {\n    return {\n      balanceOfPayment: res\n    };\n  }).catch(err => {\n    console.log(err);\n    return err;\n  });\n});\nexport const BoPSlice = createSlice({\n  name: 'balanceOfPayment',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(responsBoP.fulfilled, (state, action) => {\n      state.BoPItems = action.payload.BoPItems;\n    });\n  }\n});\nexport const {} = BoPSlice.actions;\nexport default BoPSlice;","map":{"version":3,"sources":["/moneyflow/src/stores/slices/BoPSlice.ts"],"names":["createSlice","createAsyncThunk","axios","useGetToken","initialState","BoPItems","getToken","token","getBoPList","console","log","get","headers","Authorization","responsBoP","getTo","then","res","balanceOfPayment","catch","err","BoPSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","actions"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAAkE,kBAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AAKI,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE;AADoB,CAAlC,C,CAGD;;AACH,SAASC,QAAT,GAAmB;AAAA;;AAChB,QAAMC,KAAK,GAAGJ,WAAW,EAAzB;;AACC,QAAMK,UAAU,GAAG,YAAW;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAOL,KAAK,CAACS,GAAN,CAAU,mCAAV,EAA+C;AAAEC,MAAAA,OAAO,EAAE;AAC7DC,QAAAA,aAAa,EAAE,YAAYN;AADkC;AAAX,KAA/C,CAAP;AAIP,GANG;AAMF;;GAROD,Q;UACQH,W;;;AASjB,OAAO,MAAMW,UAAU,GAAGb,gBAAgB,CACtC,0BADsC,EAEtC,YAAiC;AAC7B,SAAOc,KAAK,GACVC,IADK,CACCC,GAAD,IAAS;AACZ,WAAO;AAACC,MAAAA,gBAAgB,EAAED;AAAnB,KAAP;AACF,GAHK,EAILE,KAJK,CAIEC,GAAD,IAAS;AACbX,IAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA,WAAOA,GAAP;AACF,GAPK,CAAP;AASH,CAZqC,CAAnC;AAeP,OAAO,MAAMC,QAAQ,GAAGrB,WAAW,CAAC;AAChCsB,EAAAA,IAAI,EAAE,kBAD0B;AAEhClB,EAAAA,YAFgC;AAGhCmB,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,UAAU,CAACa,SAA3B,EAAsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,CAACvB,QAAN,GAAiBwB,MAAM,CAACC,OAAP,CAAezB,QAAhC;AACC,KAFL;AAGH;AAR+B,CAAD,CAA5B;AAWP,OAAO,MAAM,KAETgB,QAAQ,CAACU,OAFN;AAIP,eAAeV,QAAf","sourcesContent":["import { createSlice, createAsyncThunk, bindActionCreators } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BoPState } from '../../models/BoPModel'\nimport useGetToken from '../../common/useGetToken'\nimport { useAuth0 } from '@auth0/auth0-react' \n\n    type bopListType = BoPState\n\n    const initialState: bopListType = {\n        BoPItems: [],\n    };\n   // const {user} = useAuth0();\nfunction getToken(){\n   const token = useGetToken()\n    const getBoPList = async() => {\n        console.log(token);\n        return axios.get(\"http://localhost:3000/api/private\", { headers: {\n            Authorization: \"Bearer \" + token\n        },\n    })\n}}\n\nexport const responsBoP = createAsyncThunk<bopListType>(\n    'balanceOfPayment/boPList',\n    async (): Promise<bopListType>=> {\n        return getTo()\n         .then((res) => {\n            return {balanceOfPayment: res}\n         })\n         .catch((err) => {\n            console.log(err);\n            return err;\n         });\n        \n    }\n);\n\nexport const BoPSlice = createSlice({\n    name: 'balanceOfPayment',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(responsBoP.fulfilled, (state, action) => {\n            state.BoPItems = action.payload.BoPItems\n            })\n    }\n});\n\nexport const {\n    \n} = BoPSlice.actions\n\nexport default BoPSlice\n"]},"metadata":{},"sourceType":"module"}