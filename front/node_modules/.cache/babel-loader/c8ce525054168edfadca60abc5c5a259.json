{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { ResponseBoPList } from '../stores/slices/BoPSlice';\nimport { useDispatch } from 'react-redux';\n\nconst EffectGetBoPList = () => {\n  _s();\n\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function getToken() {\n      await getAccessTokenSilently().then(accessToken => {\n        dispatch(ResponseBoPList({\n          accessToken\n        }));\n      });\n      getToken();\n    }\n\n    getToken();\n  });\n};\n\n_s(EffectGetBoPList, \"xytjSr3SgqGw1vFe1kgbpFRiMu0=\", false, function () {\n  return [useAuth0, useDispatch];\n});\n\n_c = EffectGetBoPList;\nexport default EffectGetBoPList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EffectGetBoPList\");","map":{"version":3,"sources":["/moneyflow/src/common/EffectGetBoPList.ts"],"names":["useEffect","useAuth0","ResponseBoPList","useDispatch","EffectGetBoPList","getAccessTokenSilently","dispatch","getToken","then","accessToken"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAA+B,2BAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAA2BJ,QAAQ,EAAzC;AACA,QAAMK,QAAQ,GAAGH,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeO,QAAf,GAA0B;AAC1B,YAAMF,sBAAsB,GAC3BG,IADK,CACCC,WAAD,IAAiB;AACzBH,QAAAA,QAAQ,CAACJ,eAAe,CAAC;AAACO,UAAAA;AAAD,SAAD,CAAhB,CAAR;AACC,OAHO,CAAN;AAIFF,MAAAA,QAAQ;AACT;;AACDA,IAAAA,QAAQ;AACX,GATY,CAAT;AAWH,CAdD;;GAAMH,gB;UAC+BH,Q,EAChBE,W;;;KAFfC,gB;AAeN,eAAeA,gBAAf","sourcesContent":["import {useEffect} from 'react'\nimport { useAuth0} from '@auth0/auth0-react'\nimport { ResponseBoPList} from '../stores/slices/BoPSlice'\nimport { useDispatch } from 'react-redux'\n\nconst EffectGetBoPList = () => {\n    const {getAccessTokenSilently} = useAuth0();\n    const dispatch = useDispatch(); \n    useEffect(()=>{\n        async function getToken() {\n        await getAccessTokenSilently()\n        .then((accessToken) => {\n      dispatch(ResponseBoPList({accessToken}))\n      })\n      getToken();\n    }\n    getToken();\n})\n\n}\nexport default EffectGetBoPList;"]},"metadata":{},"sourceType":"module"}