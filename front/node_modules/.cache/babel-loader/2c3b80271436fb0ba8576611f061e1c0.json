{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nlet token;\nconst initialState = {\n  BoPItems: []\n};\nexport const responsBoP = (type, accesstoken) => {\n  _s();\n\n  token = accesstoken;\n  const dispatch = useDispatch();\n\n  switch (type) {\n    case 1:\n      dispatch(BoPList());\n  }\n};\n\n_s(responsBoP, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nconst GetBoPList = async () => {\n  console.log(token);\n  return axios.get(\"http://localhost:3000/api/private\", {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n}; //BoP一覧取得\n\n\n_c = GetBoPList;\nexport const BoPList = createAsyncThunk('balanceOfPayment/boPList', async (list, thunkAPI) => {\n  return GetBoPList().then(res => {\n    return {\n      balanceOfPayment: res\n    };\n  }).catch(err => {\n    console.log(err);\n    return err;\n  });\n});\nexport const BoPSlice = createSlice({\n  name: 'balanceOfPayment',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(BoP.fulfilled, (state, action) => {\n      state.BoPItems = action.payload.BoPItems;\n    });\n  }\n});\nexport const {} = BoPSlice.actions;\nexport default BoPSlice;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetBoPList\");","map":{"version":3,"sources":["/moneyflow/src/stores/slices/BoPSlice.ts"],"names":["createSlice","createAsyncThunk","useDispatch","axios","token","initialState","BoPItems","responsBoP","type","accesstoken","dispatch","BoPList","GetBoPList","console","log","get","headers","Authorization","list","thunkAPI","then","res","balanceOfPayment","catch","err","BoPSlice","name","reducers","extraReducers","builder","addCase","BoP","fulfilled","state","action","payload","actions"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAAkE,kBAAlE;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAII,IAAIC,KAAJ;AAGA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE;AADoB,CAAlC;AAIJ,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAeC,WAAf,KAAmC;AAAA;;AACzDL,EAAAA,KAAK,GAAGK,WAAR;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,UAAQM,IAAR;AACI,SAAK,CAAL;AACIE,MAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAFR;AAKH,CARM;;GAAMJ,U;UAEQL,W;;;AAQrB,MAAMU,UAAU,GAAG,YAAW;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,SAAOD,KAAK,CAACY,GAAN,CAAU,mCAAV,EAA+C;AAAEC,IAAAA,OAAO,EAAE;AAC7DC,MAAAA,aAAa,EAAE,YAAYb;AADkC;AAAX,GAA/C,CAAP;AAIH,CAND,C,CAQA;;;KARMQ,U;AASN,OAAO,MAAMD,OAAO,GAAGV,gBAAgB,CACnC,0BADmC,EAEnC,OAAOiB,IAAP,EAAaC,QAAb,KAAgD;AAC5C,SAAOP,UAAU,GACfQ,IADK,CACCC,GAAD,IAAS;AACZ,WAAO;AAACC,MAAAA,gBAAgB,EAAED;AAAnB,KAAP;AACF,GAHK,EAILE,KAJK,CAIEC,GAAD,IAAS;AACbX,IAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA,WAAOA,GAAP;AACF,GAPK,CAAP;AASH,CAZkC,CAAhC;AAeP,OAAO,MAAMC,QAAQ,GAAGzB,WAAW,CAAC;AAChC0B,EAAAA,IAAI,EAAE,kBAD0B;AAEhCrB,EAAAA,YAFgC;AAGhCsB,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBC,GAAG,CAACC,SAApB,EAA+B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9CD,MAAAA,KAAK,CAAC3B,QAAN,GAAiB4B,MAAM,CAACC,OAAP,CAAe7B,QAAhC;AACC,KAFL;AAGH;AAR+B,CAAD,CAA5B;AAWP,OAAO,MAAM,KAETmB,QAAQ,CAACW,OAFN;AAIP,eAAeX,QAAf","sourcesContent":["import { createSlice, createAsyncThunk, bindActionCreators } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\nimport { BoPState } from '../../models/BoPModel'\nimport useGetToken from '../../common/useGetToken'\nimport { useAuth0 } from '@auth0/auth0-react' \n    let token: any;\n    type bopListType = BoPState\n\n    const initialState: bopListType = {\n        BoPItems: [],\n    };\n\nexport const responsBoP = (type: number, accesstoken: any) =>{\n    token = accesstoken;\n    const dispatch = useDispatch();\n    switch (type){\n        case 1:\n            dispatch(BoPList())\n    }\n\n}\n\nconst GetBoPList = async() => {\n    console.log(token);\n    return axios.get(\"http://localhost:3000/api/private\", { headers: {\n        Authorization: \"Bearer \" + token\n        }, \n    })\n}\n\n//BoP一覧取得\nexport const BoPList = createAsyncThunk<bopListType>(\n    'balanceOfPayment/boPList',\n    async (list, thunkAPI ): Promise<bopListType>=> {\n        return GetBoPList()\n         .then((res) => {\n            return {balanceOfPayment: res}\n         })\n         .catch((err) => {\n            console.log(err);\n            return err;\n         });\n        \n    }\n);\n\nexport const BoPSlice = createSlice({\n    name: 'balanceOfPayment',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(BoP.fulfilled, (state, action) => {\n            state.BoPItems = action.payload.BoPItems\n            })\n    }\n});\n\nexport const {\n    \n} = BoPSlice.actions\n\nexport default BoPSlice\n"]},"metadata":{},"sourceType":"module"}