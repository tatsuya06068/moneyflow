{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useAuth0 } from '@auth0/auth0-react'; // /api/privateへのリクエスト\n\nexport const privateApiRequest = async () => {\n  _s();\n\n  const myHeaders = new Headers();\n  const {\n    isAuthenticated,\n    getAccessTokenSilently\n  } = useAuth0();\n  const accessToken = getAccessTokenSilently;\n  myHeaders.set(\"Authorization\", \"Bearer \" + accessToken);\n  const response = await fetch(\"http://localhost:3000/api/private\", {\n    method: \"GET\",\n    headers: myHeaders\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(err);\n  });\n  alert(JSON.stringify(response));\n};\n\n_s(privateApiRequest, \"7+vTLPt6pDdZJG6dpbpgFyzGFds=\", false, function () {\n  return [useAuth0];\n});","map":{"version":3,"sources":["/moneyflow/src/common/LoginAxios.ts"],"names":["useAuth0","privateApiRequest","myHeaders","Headers","isAuthenticated","getAccessTokenSilently","accessToken","set","response","fetch","method","headers","then","res","json","catch","err","console","log","alert","JSON","stringify"],"mappings":";;AACA,SAASA,QAAT,QAAyB,oBAAzB,C,CACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,YAAY;AAAA;;AAC3C,QAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACA,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA8CL,QAAQ,EAA5D;AACA,QAAMM,WAAW,GAAGD,sBAApB;AACAH,EAAAA,SAAS,CAACK,GAAV,CAAc,eAAd,EAA+B,YAAYD,WAA3C;AACA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAChEC,IAAAA,MAAM,EAAE,KADwD;AAEhEC,IAAAA,OAAO,EAAET;AAFuD,GAAtC,CAAL,CAIpBU,IAJoB,CAIdC,GAAD,IAAS;AACb,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,GANoB,EAOpBC,KAPoB,CAObC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAToB,CAAvB;AAUAG,EAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeb,QAAf,CAAD,CAAL;AACD,CAhBM;;GAAMP,iB;UAEyCD,Q","sourcesContent":["import axios from 'axios'\nimport { useAuth0 } from '@auth0/auth0-react'\n// /api/privateへのリクエスト\nexport const privateApiRequest = async () => {\n  const myHeaders = new Headers();\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const accessToken = getAccessTokenSilently;\n  myHeaders.set(\"Authorization\", \"Bearer \" + accessToken);\n  const response = await fetch(\"http://localhost:3000/api/private\", {\n    method: \"GET\",\n    headers: myHeaders\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  alert(JSON.stringify(response));\n};"]},"metadata":{},"sourceType":"module"}